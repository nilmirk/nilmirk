// imports
@use 'variables' as *;
@use 'sass:list';
@import url('https://fonts.googleapis.com/css2?family=Manrope:wght@400;700&display=swap');


// default
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  text-decoration: none;
  transition: all .3s ease-out;
}
body {
  font-family: #{$font};
  background-color: $black;
  padding: 1.5rem 8%;
  color: $white;
}
.layout {
  display: flex;
  width: 100%;
  flex-direction: column;
  align-items: flex-start;
}
.page {
  margin-top: 112px;
  @extend .layout, .gap-64;
}
.block {
  @extend .layout, .gap-32;
}
svg {
  width: 1em;
  height: 1em;
  path {
    fill: currentColor;
  }
}
input {
  font: inherit;
  background-color: inherit;
  border: none;
  &:focus {
    outline: none;
  }
}

// generators
$texts: (
  "h1": (3rem, 700),
  "h2": (2.5rem, 700),
  "h3": (2.25rem, 700),
  "h4": (2rem, 600),
  "h5": (1.5rem, 600),
  "h6": (1.25rem, 600),
  "b1": (1.25rem, 500),
  "b2": (1rem, 500),
  "b2b": (1rem, 700),
  "b3": (.75rem, 500),
  "bt": (1.25rem, 600)
);
@each $name, $props in $texts {
  .#{$name} {
    font-size: list.nth($props, 1);
    font-weight: list.nth($props, 2);
  }
}

$colors: (
  "white": $white,
  "white-hover": $white-hover,
  "accent": $accent,
  "accent-hover": $accent-hover,
  "black": $black,
  "black-hover": $black-hover,
  "error": $error,
  "warning": $warning,
  "success": $success,
  "info": $info,
);
@each $name, $color in $colors {
  .text-#{$name} {
    color: #{$color};
  }
  .bg-#{$name} {
    background-color: #{$color};
  }
}

// flex
.row {
  display: flex;
  flex-direction: row;
}
.col {
  display: flex;
  flex-direction: column;
}
.center-a {
  align-items: center;
  align-content: center;
}
.center-j {
  justify-content: center;
  justify-content: center;
}
.center-a-self {
  align-self: center;
}
.center-j-self {
  justify-self: center;
}
.between {
  justify-content: space-between;
  justify-content: space-between;
}
.start-a {
  align-items: flex-start;
}
.start-j {
  justify-content: flex-start;
}
.ofh {
  overflow: hidden;
}
.wrap {
  flex-wrap: wrap;
}

// grid
.col-gr {
  display: grid;
  grid-template-rows: auto;
}
.row-gr {
  display: grid;
  grid-template-columns: auto;
}

@for $num from 0 through 64 {
  .gap-#{$num} {
    gap: #{calc($num/ 16)}rem;
  }
  .rad-#{$num} {
    border-radius: #{calc($num/ 16)}rem;
  }
  .padL-#{$num} {
    padding-left: #{calc($num/ 16)}rem;
  }
  .padR-#{$num} {
    padding-right: #{calc($num/ 16)}rem;
  }
  .padT-#{$num} {
    padding-top: #{calc($num/ 16)}rem;
  }
  .padB-#{$num} {
    padding-bottom: #{calc($num/ 16)}rem;
  }
}
.no-rad {
  border-radius: 0 !important;
}

.button {
  display: flex;
  @extend .padL-8, .padR-8, .padT-4, .padB-4, .gap-8, .rad-8, .center-a;
  cursor: pointer;
}
.link {
  cursor: pointer;
  @extend .center-a;
}
$element-colors: (
  "white": ("white", "black"),
  "accent": ("accent", "white"),
  "black": ("black", "white"),
);

@each $name, $prop in $element-colors {
  .bt-#{$name} {
    @extend .button, .bg-#{list.nth($prop, 1)}, .text-#{list.nth($prop, 2)};
    &:hover {
      @extend .bg-#{list.nth($prop, 1)}-hover, .text-#{list.nth($prop, 2)}-hover;
    }
  }
}
@each $name, $prop in $element-colors {
  .link-#{$name} {
    @extend .link, .text-#{list.nth($prop, 1)};
    &:hover {
      @extend .text-#{list.nth($prop, 1)}-hover;
    }
  }
}

.w100 {
  width: 100%;
}
.h100 {
  height: 100%;
}

// blocks
header {
  outline: $white 1px solid;
  outline-offset: -1px;
  position: fixed;
  width: calc(100% - 16%);
  z-index: 1000;
  .logo {
    width: 3rem;
    height: 2rem;
  }
  .header-user {
    svg  {
      width: 1.25em;
      height: 1.25em;
    }
  }
}

.table-row {
  display: grid;
  grid-template-columns: 1fr repeat(2, 125px);
}